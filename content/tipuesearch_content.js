var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': '20221014', 'text': 'hii \n', 'tags': '', 'url': '20221014.html'}, {'title': 'canvas', 'text': '格子改成黑底 白色跑 \n  納入 Brython 環境  \n \n \n  啟動 Brython  \n \n \n  給定 brython_div1 division 標註  \n \n  加入啟動按鈕後的 Rect 行走程式原始碼  \n \n \n 關鍵程式碼: \n #grid(origx, origy, w, h, wnum, hnum, pixel=1, color="black")\n#draw_line(0, 0, 600, 600, color="black")', 'tags': '', 'url': 'canvas.html'}, {'title': '20230105', 'text': '檢查倉儲名稱是否有誤 \n \n', 'tags': '', 'url': '20230105.html'}, {'title': '20230105練習', 'text': '', 'tags': '', 'url': '20230105練習.html'}, {'title': 'ex1', 'text': '\n ex1在for迴圈裡面設定一個範圍1是起始 10是終點 以3為一個單位 \n', 'tags': '', 'url': 'ex1.html'}, {'title': 'ex2', 'text': '函式呼叫與定義 \n \n ex2第5行end+1是因為原先範圍的最後沒有涵蓋到(例如到15但15沒有被涵蓋) \n tips函式呼叫不可縮排 \n 補充:sumto()函式可以同時呼叫很多 例如同時呼叫sumto(5,25)\xa0 sumto(1,100)就會有由1加到100等於:sth跟由5加到25等於:sth \n def sumto(start=1,end=15):\n    sum = 0\n    #start = 1\n    #end = 100\n    for i in range(start,end+1,1):\n        sum = sum + i\n        #print(i)\n    print("由" + str(start) + "加到" + str(end) + "等於:" + str(sum))\n          \n          \nsumto(5,25)\nsumto(1,100) \n 列出python關鍵字 \n [\'False\', \'None\', \'True\', \'and\', \'as\', \'assert\', \'async\', \'await\', \'break\', \'class\', \'continue\', \'def\', \'del\', \'elif\', \'else\', \'except\', \'finally\', \'for\', \'from\', \'global\', \'if\', \'import\', \'in\', \'is\', \'lambda\', \'nonlocal\', \'not\', \'or\', \'pass\', \'raise\', \'return\', \'try\', \'while\', \'with\', \'yield\'] \n \n \n', 'tags': '', 'url': 'ex2.html'}, {'title': 'W12HW-2', 'text': '第一個練習 \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\nuser_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\nprint(type(user_input_temp)) \n \n 第二個練習 \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回 user_input_temp = input("請輸入攝氏溫度值:") # 接著列出 user_input_temp 變數的資料型別 print(type(user_input_temp)) # 到這裡已知利用 input() 函式將傳回字串, 接著以 float() 將字串轉為浮點數 user_input_temp = float(user_input_temp) # 因為攝氏溫度乘上 9/5 之後再加上 32 就可以得到對應的華氏溫度值 Fahrenheit = (user_input_temp*9/5) + 32 # 到這裡, Fahrenheit 資料型別為浮點數, 而 user_input_temp 在第 8 行也轉為浮點數 # 要將兩個浮點數與字串相加, 都必須透過 str() 轉為字串 print("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.") \n \n', 'tags': '', 'url': 'W12HW-2.html'}, {'title': 'W12 HW', 'text': 'https://gist.githubusercontent.com/40923150/ff8df392005897ac373fbcce42d971ec/raw/f369f37c04587dabc01a5ac28679c63d658751d2/w12_hw-1.py \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回 \n user_input_temp  =   input ( "請輸入攝氏溫度值:" ) \n # 接著列出 user_input_temp 變數的資料型別 \n print ( type (user_input_temp)) \n \n \n \n \n \n \n \n Ex.1 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n \n \n \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回 \n user_input_temp = input("請輸入攝氏溫度值:") \n # 接著列出 user_input_temp 變數的資料型別 \n print(type(user_input_temp)) \n # 到這裡已知利用 input() 函式將傳回字串, 接著以 float() 將字串轉為浮點數 \n user_input_temp = float(user_input_temp) \n # 因為攝氏溫度乘上 9/5 之後再加上 32 就可以得到對應的華氏溫度值 \n Fahrenheit = (user_input_temp*9/5) + 32 \n # 到這裡, Fahrenheit 資料型別為浮點數, 而 user_input_temp 在第 8 行也轉為浮點數 \n # 要將兩個浮點數與字串相加, 都必須透過 str() 轉為字串 \n print("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.") \n \n \n \n \n \n \n \n Ex.2 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n \n \n \n <h3>w12 - 1 < / h3> \n <! - - \n 在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑 \n - - > \n <script src = "./../cmsimde/static/brython.js" >< / script> \n <script src = "./../cmsimde/static/brython_stdlib.js" >< / script> \n <! - -   啟動 Brython  - - > \n <p> \n <script> / /   <![CDATA[ \n window.onload = function(){ \n brython({debug: 1 , pythonpath:[ \'./../cmsimde/static/\' , \'/downloads/py/\' ]}); \n } \n / /   ]]>< / script> \n <! - -   以下事先在頁面中加入  id = "brython_div"   的 div 標註 \n 之後可利用 Brython 的 document 模組與此 html 標註對應 \n - - >< / p> \n <! - -   利用 html 建立一個  id = "btn1"   的按鈕  - - > \n <p><button  id = "btn1" >取使用者輸入< / button>< / p> \n <div  id = "brython_div" >< / div> \n <p> \n <script  type = "text/python" > / /   <![CDATA[ \n from   browser  import   html, document \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回 \n #user_input_temp = input("請輸入攝氏溫度值:") \n # 接著列出 user_input_temp 變數的資料型別 \n # 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面 \n #print(type(user_input_temp)) \n # 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應 \n brython_div  =   document[ "brython_div" ] \n # 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置 \n #brython_div <= user_input_temp \n # 之後若要列出 html, 則需要透過 Brython 的 html 模組 \n # 接下來要設法按下按鈕之後才執行取使用者 input 的流程 \n # 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式 \n def   get_input(env): \n \xa0\xa0\xa0\xa0 user_input_temp  =   input ( "請輸入攝氏溫度值:" ) \n \xa0\xa0\xa0\xa0 brython_div < =   user_input_temp \n # 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法 \n # 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式 \n document[ "btn1" ].bind( \'click\' , get_input) \n / /   ]]>< / script> \n \n \n \n \n \n \n \n <<<<<<< HEAD \n \n', 'tags': '', 'url': 'W12 HW.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': 'W15', 'text': '\xa0 \n Q1：為何學習計算機程式需要建立個人倉儲? A1：可儲存個人的檔案或資料，更新或修改內容時，都可以看的到添加或刪除了什麼 \n \n Q2：全球資訊網能夠提供甚麼功能或有什麼優點? \n A2：可以讓人查詢資料 \n \n Q3：Replit, stud.cycu.org 與 localhost 分別代表甚麼? A3：Replit:線上程式開發環境服務 \n \xa0 \xa0 \xa0 \xa0 \xa0stud.cycu.org:學校主機的名稱 \n \xa0 \xa0 \xa0 \xa0localhost:是一個在電腦網路中用於表示「此電腦」的主機名 \n Q4：https, ssh 到底提供使用者那些功能或優點? A4：https:是一種透過計算機網路進行安全通訊的傳輸協定 \n \xa0 \xa0 \xa0 \xa0 \xa0ssh:是一種網路安全協定，通過加密和認證機制實現安全的訪問和檔傳輸等業務 \n Q5：Brython 與 Python 有甚麼差別? A5：Brython: 使用python取代avaScript \n \xa0 \xa0 \xa0 \xa0 \xa0Python:程式語言 \n Q6：能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? A6：能利用寫程式的方式，將自己想要的圖形給顯現出來 \n Q7：變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n A7：寫程式時會利用到的一些單字 \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': '建立cp2022倉儲', 'text': '1.先到teams下載框內的東西 \n \n \n 2.下載至隨身碟之後點選start，小黑窗就會跳出來 \n \n \n 3.跳出來之後就可以在小黑窗上打以下指令 \n cd tmp\xa0 (切換到tmp資料夾) \n <<<<<<< HEAD \n cms複製網址進靜態網站態網站 \n', 'tags': '', 'url': '建立cp2022倉儲.html'}, {'title': 'Brython-1', 'text': '======= \n cms複製網址進靜態網站態網站 \n', 'tags': '', 'url': 'Brython-1.html'}, {'title': 'Brython-2', 'text': '', 'tags': '', 'url': 'Brython-2.html'}, {'title': '2022.1014 test', 'text': 'hi \n', 'tags': '', 'url': '2022.1014 test.html'}, {'title': 'Brython-3', 'text': '>>>>>>> 37a3b3e9cbf1a58b4b2fe1dd99a4ef57c1101ff5 \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \xa0 Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython-3.html'}]};